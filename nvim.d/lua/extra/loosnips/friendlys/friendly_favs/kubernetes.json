{
    "k8s Service": {
        "prefix": "k-service",
        "description": "k8s Service",
        "body": [
            "# https://kubernetes.io/docs/concepts/services-networking/service/",
            "apiVersion: v1",
            "kind: Service",
            "metadata:",
            "  name: ${1:myjob}",
            "  namespace: ${2:default}",
            "spec:",
            "  selector:",
            "    app: ${1:myjob}",
            "  type: ${3|ClusterIP,NodePort,LoadBalancer|}",
            "  ports:",
            "  - name: ${1:myjob}",
            "    protocol: ${4|TCP,UDP|}",
            "    port: ${5:80}",
            "    targetPort: ${6:5000}",
            "    nodePort: ${7:30001}",
            "---",
            "$0"
        ]
    },
    "k8s ConfigMap": {
        "prefix": "k-configmap",
        "description": "k8s ConfigMap",
        "body": [
            "# https://kubernetes.io/docs/concepts/configuration/configmap/",
            "apiVersion: v1",
            "kind: ConfigMap",
            "metadata:",
            "  name: ${1:myconfig}",
            "  namespace: ${2:default}",
            "data:",
            "  ${3:key}: ${4:value}",
            "---",
            "$0"
        ]
    },
    "k8s Secret": {
        "prefix": "k-secret",
        "description": "k8s Secret",
        "body": [
            "# https://kubernetes.io/docs/concepts/configuration/secret/",
            "apiVersion: v1",
            "kind: Secret",
            "metadata:",
            "  name: ${1:mysecret}",
            "  namespace: ${2:default}",
            "type: Opaque",
            "data:",
            "  # Example:",
            "  # password: {{ .Values.password | b64enc }}",
            "---",
            "$0"
        ]
    },
    "k8s Job": {
        "prefix": "k-job",
        "description": "k8s Job",
        "body": [
            "# https://kubernetes.io/docs/concepts/workloads/controllers/job/",
            "apiVersion: batch/v1",
            "kind: Job",
            "metadata:",
            "  name: ${1:myjob}",
            "  namespace: ${2:default}",
            "  labels:",
            "    app: ${1:myjob}",
            "spec:",
            "  template:",
            "    metadata:",
            "      name: ${1:myjob}",
            "      labels:",
            "        app: ${1:myjob}",
            "    spec:",
            "      containers:",
            "      - name: ${1:myjob}",
            "        image: ${3:python:3.7.6-alpine3.10}",
            "        command: ['sh', '-c', '${4:python3 manage.py makemigrations && python3 manage.py migrate}']",
            "        env:",
            "        - name: ENV_NAME",
            "          value: ENV_VALUE",
            "        volumeMounts:",
            "        - name: localtime",
            "          mountPath: /etc/localtime",
            "      volumes:",
            "      - name: localtime",
            "        hostPath:",
            "          path: /usr/share/zoneinfo/Asia/Taipei",
            "      restartPolicy: OnFailure",
            "      dnsPolicy: ClusterFirst",
            "---",
            "$0"
        ]
    },
    "k8s CronJob": {
        "prefix": "k-cronjob",
        "description": "k8s CronJob",
        "body": [
            "# https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
            "apiVersion: batch/v1",
            "kind: CronJob",
            "metadata:",
            "  name: ${1:cronjobname}",
            "  namespace: ${2:default}",
            "spec:",
            "  schedule: \"${3:*/1 * * * *}\"",
            "  jobTemplate:",
            "    spec:",
            "      template:",
            "        spec:",
            "          containers:",
            "          - name: ${4:jobname}",
            "            image: ${5:busybox}",
            "            args: ['/bin/sh', '-c', '${6:date; echo Hello from the Kubernetes cluster}']",
            "          restartPolicy: OnFailure",
            "---",
            "$0"
        ]
    },
    "k8s Pod": {
        "prefix": "k-pod",
        "description": "k8s Pod",
        "body": [
            "# https://kubernetes.io/docs/concepts/workloads/pods/",
            "apiVersion: v1",
            "kind: Pod",
            "metadata:",
            "  name: \"${1:myapp}\"",
            "  namespace: ${2:default}",
            "  labels:",
            "    annotations:",
            "      kubectl.kubernetes.io/default-container:  ${1:myapp}",
            "    app: \"${1:myapp}\"",
            "spec:",
            "  containers:",
            "  - name: ${1:myapp}",
            "    image: \"${3:debian-slim:latest}\"",
            "    resources:",
            "      limits:",
            "        cpu: 200m",
            "        memory: 500Mi",
            "      requests:",
            "        cpu: 100m",
            "        memory: 200Mi",
            "    env:",
            "    - name: DB_HOST",
            "      valueFrom:",
            "        configMapKeyRef:",
            "          name: myapp",
            "          key: DB_HOST",
            "    ports:",
            "    - containerPort: ${4:80}",
            "      name: http",
            "    volumeMounts:",
            "    - name: localtime",
            "      mountPath: /etc/localtime",
            "  volumes:",
            "    - name: localtime",
            "      hostPath:",
            "        path: /usr/share/zoneinfo/Asia/Taipei",
            "  restartPolicy: Always",
            "---",
            "$0"
        ]
    }
}
