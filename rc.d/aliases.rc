# bash/zsh shared aliases 

# NOTE: For aliases with commands that have a bunch of flags (eg. git diff) Im only aliasing up to 1 extra flag. Any mixing and matching must be done manually by adding the extra flags to the stemmed alias.
#
# Example: For "git diff --staged --stat" will have to be entered as "gds --staged" or "gdsg --stat"


# inital examples
alias jc="jupyter-console"
alias python=python3
alias fdd="find -type d"
alias tdv="vim $HOME/dotfiles/TODO.md"
alias bat="bat --theme='Nord'"
alias nv="nvim"
alias n="nvim"
alias sortu="sort -u"
alias sortr="sort -r"


# general
alias eg="egrep"
alias egr="egrep -R"
alias egl="egrep -l"
alias egc="egrep -c"
alias egv="egrep -v"
alias ego="egrep -o"
alias a="alias"
alias ag="alias | egrep "
alias h="history"
alias hg="history | egrep "
alias tt="tldr"
alias ls="ls -lh"
alias lsa="ls -lha"
alias wcl="wc -l"
alias wcc="wc -c"

# @TODO: Decide on alias naming convention for 'raw' (no flags) builtin shell from 
#	the 4 styles below. After deciding, remove other 3 styles.
alias LS="command ls"
alias ls_raw="command ls"
alias lsrw="command ls"
alias lsRaw="command ls"

# view shell custom completion functs/cmds
alias cgf="compgen -A function| egrep "
alias cgf="compgen -c | egrep "
alias fcl="fc -l"	# view shell history with cmd # for rerunning
alias rr='fc -s'		# rerun last command matching pattern that follows (no pattern is last command)

# cheat
alias c="cheat -c"      # colorize cheat
alias ce="cheat -e"     # cheat edit
alias cl="cheat -l"     # cheat edit
alias cs="cheat -cs"     # cheat edit

## pet (cheat meets ultisnips)
alias pc="pet clip"
alias pe="pet edit"
alias px="pet exec"
alias pl="pet list"
alias ph="pet help"     # how to use: `ph search` (returns help for search subcommand)
alias psr="pet search"
alias pvw="bat $HOME/dotfiles/config.d/pet/snippet.toml"

## cron
alias cte="crontab -e"
alias ctl="crontab -l"

## tmux 
alias tmds="tmux detach"
alias tmls='tmux ls'
alias tmsk="tmux send-keys "
alias tmlk="tmux list-keys"
alias tmlkg="tmux list-keys  | egrep -i "

## Tmux Session Mngmnt
alias tmns="tmux new-session -t"     
alias tmks="tmux kill-session"
alias tmka="tmux kill-session -a"
alias tma="tmux attach"

## Tmux Window Mngmnt
alias tmkw="tmux kill-window"
alias tmnw="tmux new-window -t"     # new window default name
alias tmnwn="tmux new-window -n "   # new window with name flag
alias tmmw="tmux move-window"   # new window with name flag

## Tmux Pane Mngmnt
alias tmkp="tmux kill-pane"
alias tmkpa="tmux kill-pane -a"	# kill all panes except for target

## Tmux Buffer Mngmnt
alias tmab="tmux save-buffer -a"
alias tmcb="tmux choose-buffer"
alias tmsvb="tmux save-buffer"
alias tmpb="tmux paste-buffer"
alias tmshb="tmux show-buffer"
alias tmstb="tmux set-buffer"


## GIT ALIASES 

alias g="git"
alias o="origin"
### add
alias gad="git add --dry-run"
alias ga="git add"
alias ga.="git add ."
alias gacm="git add . && git commit -m "

### branch


### commit 
alias gc="git commit"
alias gca="git commit --amend"
alias gcmf="git commit --fixup "
alias gcm="git commit -m"
alias gcmsg="git commit -m"
### checkout
#alias gco="git checkout "
alias GCO="git checkout "
alias gcmn="git checkout main "
alias gcb="git checkout -b "
alias gc1="git checkout @{-1}"  # checkout last branch 





### fetch
alias gf="git fetch"

### log
alias glg="git log --pretty=oneline"
alias glgg="git log "
alias glgn="git log -n "
alias glgo="git log --oneline"
alias glga="git log -all"
alias glga_graph="git log --oneline --decorate --graph --all"

### merge
alias gm="git merge "
alias gmmn="git merge main"      # merge main into branch to ensure branch always in-sync with main
alias gml="git merge @{-1}"     # merge last checkout branch

### push
alias gpf="git push --force "
alias gp="git push "

### pull
alias gpl="git pull"
alias gplr="git pull --rebase"
alias gplf="git pull --ff-only"

### rebase
alias grb="git rebase "
alias grba="git rebase --abort"
alias grbi="git rebase -i "
alias grbc="git rebase --continue"
alias grbsq="git rebase -i --autosquash"
alias grbm="git rebase main"

### restore
alias grs="git restore "
alias grss="git restore --staged "

### status
alias gs="git status"
alias gss="git status -s -b"	# include branch name in short format status ouputs
alias gss="git status --porcelain"	# use for shell scripts and pipelines

### stash
alias gst="git stash"
alias gstl="git stash list"
alias gstp="git stash push -m"
alias gstpu="git stash push -u"

## @TODO: Refactor below "git aliases" with above "git aliases"
## BASH.D GIT ALIASES COPYPASTA 

alias gc="git commit"
alias gca="git commit --amend"
alias gcm="git commit -m "
alias glg="git log --graph --pretty --abbrev-commit"
alias glgg="git log"
alias grs="git restore"
alias grss="git restore --staged"
alias gs="git status"
alias ga="git add"
alias gaa="git add ."
alias gad="git add --dry-run"
alias gco="git checkout"

## Git Stash 
alias gst="git stash"
alias gstp="git stash push"
alias gstdp="git stash show --patch"  # use as workaround until I can add "--patch" handling logic in "gstd" rc.d/function


## Git Branch 
alias gb="git branch"          
alias gbl="git branch --list "          # list branches that match glob 
alias gbc="git branch --contains "      # like -l except for commits
alias gba="git branch -a --sort=-committerdate "               # list all (local and remote) branches
alias gbr="git branch -r --sort=-committerdate  "               # list remote branchs
alias gbc="git branch --show-current"

# filter 20 most recent branches by default
#alias gbs20="git branch --sort=-committerdate | head -n 20"   # (s)ort newest -> oldest

# git branch sort [a]ll 
alias gbsa="git branch --all --sort=-committerdate"   # (s)ort newest -> oldest
alias gbsa-="git branch --all --sort=committerdate"   # (s)ort oldest -> newest
alias gbm="git branch --merged"         # list all branches merged into CURRENT branch
alias gbnm="git branch --no-merged"     # list all branches not merged into CURRENT branch


# (f)ind git branch with egrep pattern in branch name or commit message
alias gbf="git branch -v --sort='-committerdate' | egrep --color=always -i"  


# Git Push
alias gpf="git push -f"
alias gp="git push"


# peak/page very long git status outputs
alias gsh="git status | head -n25"
alias gsp="git status | less -RiXj5"

# Git Checkout
alias gcb="git checkout -b"
alias gcmn="git checkout main"

# Git Diff
alias gd="git diff "
alias gdi="git diff --ignore-all-space"
alias gdm="git diff $(git branch --show-current) main"	# diff local feat with local main
alias gds="git diff --stat"
alias gdsg="git diff --staged"
alias gdss="git diff --shortstat"  # output total number of modified files and added/deleted lines
alias gdo="git diff origin"
alias gdc="git diff --color=always"

## Git Other/Oneoffs
alias gshw="git show"
alias gmv="git move"
alias gwt="git worktree"
alias gap="git apply"
alias grfl="git reflog"
alias grm="git rm"
alias gpl="git pull"
alias gm="git merge"
alias gmnf="git merge --no-ff"
alias grb="git rebase "
alias grbm="git rebase main"
alias grbo="git rebase origin"



## miscellaneous 
alias tree="tree -C"  # colorize output by default
alias t1="tail -n1"
alias t10="tail -n10"
alias t30="tail -n30"
alias h1="head -n1"
alias h10="head -n10"
alias h30="head -n30"
alias hist10="history | tail -n 10"
alias hist30="history | tail -n 30"


## taskwarrior
alias t="task"
alias ta="task add"
alias tl="task list"

## fd
alias fd='fd --ignore-file "$HOME/dotfiles/config.d/fd/fdignore"'
alias fd_noignore="$(which fd) -I"
alias fda="which $(fd) -HI"
alias fdca="fd --changed-after "
alias fdcb="fd --changed-before"
alias fdcw="fd --changed-within"
alias fde="fd -e"
alias fdH="fd -H"
alias fdHI="fd -HI"
alias fdI="$(which fd) -I"
alias fdt="fd -t"

# ripgrep
alias rg_bare="rg -NI"  # --no-line-number --no-filename
alias rgc="rg -c"	# ripgrep count matches
alias rgo="rg -o"
alias rgi="rg -i"
alias rgl="rg -l"
alias rgp="rg -p"
alias rgv="rg -v"

# unsorted
alias weather='curl "wttr.in/New+York+City?2nq"'
alias ch777="chmod 777 -R"
alias chmox="chmod +x"

## keybind references 
alias kbv="bat $HOME/.cheatlib/resources/keybindings-zc-cheatsheet.txt"

# freq. venvs
alias vv="source $HOME/.local/state/python/venvs/venv/bin/activate"  # default python venv
alias vvs="source $HOME/.shellGPT/shellGPT_venv/bin/activate"
alias uvv="source $HOME/.local/state/python/uv/venvs/uvv/bin/activate"   # default uv venv

# shell command pipelining
alias xa='xargs -I "{}"'
# alias xargs='xargs -I "{}"'
# alias XARGS='command xargs'
# alias xargs_raw='command xargs'
# alias xargsrw='command xargs'
# alias xargsRaw='command xargs'
alias cutw='cut -d " "'  # cut [w]hitespace delimited
alias cutc='cut -d ","'  # cut [c]omma delimited

#alias sedn=""	# TODO: Make function for sed "newline" delimiter function. Acts similarly
# 		# 	to above cut aliases except the delimiter (that will be replaced 
#		# 	by a NEWLINE) is passed as CLI ARG.
#alias cutd=""	# TODO: make function for cut helper funct, like above sed funct, except it takes delimiter AND field args from CLI, and returns cut results


# @TODO: Refactor into functions so flags for each git subcommand can be passed 
# @Example: `fz_ga` will run `git add --dry-run` if `--dry-run` flag passed

# GIT x FZF ALIASES
alias fz_gd="git branch --all | fzf  -0 | xargs git diff"
alias fz_gds="git branch --all | fzf  -0| xargs git diff --stat"
alias fz_gdp="git branch --all | fzf  -0| xargs git diff --patch {} | tee $HOME/.tmp/{}.patch"
alias fz_grm="git status ---porcelain | awk -F ' ' '{print $2}' | fzf -m -1 -0 | xargs git rm"
alias fz_gmv="git branch --all | fzf -m -1  -0| xargs git mv"

# git repo folder jumping
alias dob="cd $HOME/git/dataops_bible"
alias zlb="cd $HOME/git/zlib"
alias gwh="cd $HOME/git"
alias dot="cd $HOME/git/newdots"
alias zxp="cd $HOME/git/zxp"
alias obb="cd $HOME/git/obsiddy"
alias clb="cd $HOME/git/cheatbook"
alias twa="cd $HOME/git/taskwarra"
alias fkx="cd $HOME/git/fortknox"

# terminal json formatter
alias prettyjson='python -m json.tool'

# TODO: Refactor into a function/script that has a flag for each gig directory, and if no
# flag given makes a three
# standard gitignore directory, used across all projects
alias mkgig="mkdir -v .IgnoreMe .tmp .patches"

alias ttl="tldr -l"
alias ttg="tldr -l | egrep "
alias clg="cheat -l | egrep "
alias varhome="cd $HOME/.local/var"
alias vartmp="cd $HOME/.local/var/tmp"

# github cli
alias ghr="gh repo"
alias ghrl="gh repo list"
alias ghcx="gh copilot explain"
alias ghcs="gh copilot suggest -s"

# lazygit
alias lg="lazygit"
alias sedpath="echo $PATH | sed 's/:/\n/g' "

# XDG cd aliases
alias xdgdat="cd $HOME/.local/share"
alias xdgconF="cd $HOME/.config"
alias xdgtmp="cd $HOME/.local/tmp"
alias xdgvar="cd $HOME/.local/var"

# easier cli "--help" arg flag usage
alias hh="help"  
alias h_="--help"  

alias suu="sudo"
alias ap="ansible-playbook"

# @TODO: debug aliases commented out with 3 hashtags "#" 
# easier/smoother flag appending for various git cmds/subcmds combos
alias sg_='--staged'
alias st_='--stat'	
alias pxa_='--pickaxe-all -S'
alias pxr_='--pickaxe-regex -S '
alias scd_="--sort=-committerdate "   # expand to sort by commit date in reverse (most recent first)
alias scd+="--sort=committerdate "   # expand to sort by commit date (oldest first)


## text processing alias

# remove ansii escape codes from text (added by things like "--color=always")
alias nocolor="sed 's/\\x1b\\[[0-9;]*m//g'"

# squash lines into single whitespace delimited line
alias squash_lines="tr '\n' ' ' | sed 's/  */ /g' "

# sandobx/scratch directory
alias sdir="cd $HOME/.local/var/scratch"

# z/zoxide alias
alias z="zoxide"
alias zz="zoxide"

# common show git branches
alias gbs35="git branch --sort=-committerdate --all | head -n 35"
alias gbs25="git branch --sort=-committerdate --all | head -n 25"
alias gbs15="git branch --sort=-committerdate --all | head -n 15"
alias gbs5="git branch --sort=-committerdate --all | head -n 5"

alias taskToday="task entry:today"
